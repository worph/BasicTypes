var g;(x=>{function h(f,i){let n=i-f;if(n===0)return 0;let e=Math.floor((n- -Math.PI)/(Math.PI*2));return n-e*(Math.PI*2)}x.shortestBetween=h;function l(f){return f=f%(2*Math.PI),f>=0?f:f+2*Math.PI}x.normalize=l})(g||={});var d;(M=>{function h({x:t,y:r},o){return{x:t+o.x,y:r+o.y}}M.offsetPoint=h;function l(t,r,o){return o?(o.x=t.x*r,o.y=t.y*r,o):{x:t.x*r,y:t.y*r}}M.mult=l;function x(t,r){return r?(r.x=Math.floor(t.x),r.y=Math.floor(t.y),r):{x:Math.floor(t.x),y:Math.floor(t.y)}}M.floor=x;function f(t,r){return r?(r.x=Math.round(t.x),r.y=Math.round(t.y),r):{x:Math.round(t.x),y:Math.round(t.y)}}M.round=f;function i(t,r){return r?(r.x=Math.ceil(t.x),r.y=Math.ceil(t.y),r):{x:Math.ceil(t.x),y:Math.ceil(t.y)}}M.ceil=i;function n(t,r,o){return o?(o.x=t.x+r.x,o.y=t.y+r.y,o):{x:t.x+r.x,y:t.y+r.y}}M.add=n;function e(t,r){let o=r.x-t.x,s=r.y-t.y;return Math.sqrt(s*s+o*o)}M.distance=e;function c(t,r){return t.x==r.x&&t.y==r.y}M.equals=c;function p(t){return{x:t.x,y:t.y}}M.clone=p})(d||={});var w;(t=>{function h(r){return r.to.x>=r.from.x&&r.to.y>=r.from.y}t.isValid=h;function l(r){return{x:Math.floor((r.from.x+r.to.x)/2),y:Math.floor((r.from.y+r.to.y)/2)}}t.center=l;function x(r){return{x:r.to.x-r.from.x+1,y:r.to.y-r.from.y+1}}t.size=x;function f(r,o){return r.from.x<=o.x&&o.x<=r.to.x&&r.from.y<=o.y&&o.y<=r.to.y}t.containsPoint=f;function i({x:r,y:o},s,a){return a?(a.from.x=s.from.x+r,a.from.y=s.from.y+o,a.to.x=s.to.x+r,a.to.y=s.to.y+o,a):{from:{x:s.from.x+r,y:s.from.y+o},to:{x:s.to.x+r,y:s.to.y+o}}}t.offsetArea=i;function n(r,o){return d.equals(r.from,o.from)&&d.equals(r.to,o.to)}t.equals=n;function e(r){return{from:{x:r.from.x,y:r.from.y},to:{x:r.to.x,y:r.to.y}}}t.clone=e;function c(r,o,s=1){for(let a=r.from.x;a<=r.to.x;a+=s)for(let D=r.from.y;D<=r.to.y;D+=s)o(a,D)}t.forEach=c;function p(r={x:0,y:0},o={x:0,y:0}){if(r.x>o.x||r.y>o.y)throw new Error("from must be smaller than to");return{from:r,to:o}}t.mk=p;function M(r){return(r.to.x-r.from.x+1)*(r.to.y-r.from.y+1)}t.computeSurfaceArea=M})(w||={});var m="up",y="down",u="right",P="left";var I;(x=>{function h(f){switch(f){case m:return y;case y:return m;case u:return P;case P:return u}throw new Error}x.reverse=h;function l(f){switch(f){case m:return u;case y:return P;case u:return y;case P:return m}throw new Error}x.getAdjacentRightDir=l})(I||={});var A;(l=>{function h(x){return Math.round(x)}l.roundToInt=h})(A||={});var R;(f=>{function h(i,n,{x:e,y:c}={x:0,y:0}){switch(i){case m:return{x:e,y:c-n};case y:return{x:e,y:c+n};case u:return{x:e+n,y:c};case P:return{x:e-n,y:c}}throw new Error}f.addInDirection=h;function l({x:i,y:n},e=1){let c=[];return c.push({direction:m,point:h(m,e,{x:i,y:n})}),c.push({direction:u,point:h(u,e,{x:i,y:n})}),c.push({direction:y,point:h(y,e,{x:i,y:n})}),c.push({direction:P,point:h(P,e,{x:i,y:n})}),c}f.get4AdjacentDirectionPoint=l;function x({x:i,y:n},e){switch(e){case m:return{x:i,y:n};case y:return{x:-i,y:-n};case u:return{x:-n,y:i};case P:return{x:n,y:-i}}throw new Error}f.rotatePoint=x})(R||={});var b;(l=>{function h(x,f,i){let n=Math.cos(f),e=Math.sin(f),c,p;if(i){let M=i.x,t=i.y;c=n*(x.x-M)-e*(x.y-t),p=e*(x.x-M)+n*(x.y-t)}else c=n*x.x-e*x.y,p=e*x.x+n*x.y;return x.x=c,x.y=p,x}l.rotate=h})(b||={});export{g as AngleRadMath,w as AreaMath,y as DOWN,I as DirectionMath,A as IntMath,P as LEFT,d as Point2Math,R as PointDirectionMath,u as RIGHT,m as UP,b as Vector2Math};
//# sourceMappingURL=index.js.map