var d;(f=>{function h(c,x){let e=x-c;if(e===0)return 0;let i=Math.floor((e- -Math.PI)/(Math.PI*2));return e-i*(Math.PI*2)}f.shortestBetween=h;function a(c){return c=c%(2*Math.PI),c>=0?c:c+2*Math.PI}f.normalize=a})(d||={});var M;(o=>{function h({x:r,y:t},n){return{x:r+n.x,y:t+n.y}}o.offsetPoint=h;function a(r,t,n){return n?(n.x=r.x*t,n.y=r.y*t,n):{x:r.x*t,y:r.y*t}}o.mult=a;function f(r,t){return t?(t.x=Math.floor(r.x),t.y=Math.floor(r.y),t):{x:Math.floor(r.x),y:Math.floor(r.y)}}o.floor=f;function c(r,t){return t?(t.x=Math.round(r.x),t.y=Math.round(r.y),t):{x:Math.round(r.x),y:Math.round(r.y)}}o.round=c;function x(r,t){return t?(t.x=Math.ceil(r.x),t.y=Math.ceil(r.y),t):{x:Math.ceil(r.x),y:Math.ceil(r.y)}}o.ceil=x;function e(r,t,n){return n?(n.x=r.x+t.x,n.y=r.y+t.y,n):{x:r.x+t.x,y:r.y+t.y}}o.add=e;function i(r,t){let n=t.x-r.x,l=t.y-r.y;return Math.sqrt(l*l+n*n)}o.distance=i;function s(r,t){return r.x==t.x&&r.y==t.y}o.equals=s;function p(r){return{x:r.x,y:r.y}}o.clone=p})(M||={});var D;(p=>{function h(o){return{x:Math.floor((o.from.x+o.to.x)/2),y:Math.floor((o.from.y+o.to.y)/2)}}p.center=h;function a(o){return{x:o.to.x-o.from.x+1,y:o.to.y-o.from.y+1}}p.size=a;function f(o,r){return o.from.x<=r.x&&r.x<=o.to.x&&o.from.y<=r.y&&r.y<=o.to.y}p.containsPoint=f;function c({x:o,y:r},t,n){return n?(n.from.x=t.from.x+o,n.from.y=t.from.y+r,n.to.x=t.to.x+o,n.to.y=t.to.y+r,n):{from:{x:t.from.x+o,y:t.from.y+r},to:{x:t.to.x+o,y:t.to.y+r}}}p.offsetArea=c;function x(o,r){return M.equals(o.from,r.from)&&M.equals(o.to,r.to)}p.equals=x;function e(o){return{from:{x:o.from.x,y:o.from.y},to:{x:o.to.x,y:o.to.y}}}p.clone=e;function i(o,r,t=1){for(let n=o.from.x;n<=o.to.x;n+=t)for(let l=o.from.y;l<=o.to.y;l+=t)r(n,l)}p.forEach=i;function s(){return{from:{x:0,y:0},to:{x:0,y:0}}}p.mk=s})(D||={});var m="up",y="down",P="right",u="left";var g;(f=>{function h(c){switch(c){case m:return y;case y:return m;case P:return u;case u:return P}throw new Error}f.reverse=h;function a(c){switch(c){case m:return P;case y:return u;case P:return y;case u:return m}throw new Error}f.getAdjacentRightDir=a})(g||={});var I;(a=>{function h(f){return Math.round(f)}a.roundToInt=h})(I||={});var w;(c=>{function h(x,e,{x:i,y:s}={x:0,y:0}){switch(x){case m:return{x:i,y:s-e};case y:return{x:i,y:s+e};case P:return{x:i+e,y:s};case u:return{x:i-e,y:s}}throw new Error}c.addInDirection=h;function a({x,y:e},i=1){let s=[];return s.push({direction:m,point:h(m,i,{x,y:e})}),s.push({direction:P,point:h(P,i,{x,y:e})}),s.push({direction:y,point:h(y,i,{x,y:e})}),s.push({direction:u,point:h(u,i,{x,y:e})}),s}c.get4AdjacentDirectionPoint=a;function f({x,y:e},i){switch(i){case m:return{x,y:e};case y:return{x:-x,y:-e};case P:return{x:-e,y:x};case u:return{x:e,y:-x}}throw new Error}c.rotatePoint=f})(w||={});var R;(a=>{function h(f,c,x){let e=Math.cos(c),i=Math.sin(c),s,p;if(x){let o=x.x,r=x.y;s=e*(f.x-o)-i*(f.y-r),p=i*(f.x-o)+e*(f.y-r)}else s=e*f.x-i*f.y,p=i*f.x+e*f.y;return f.x=s,f.y=p,f}a.rotate=h})(R||={});export{d as AngleRadMath,D as AreaMath,y as DOWN,g as DirectionMath,I as IntMath,u as LEFT,M as Point2Math,w as PointDirectionMath,P as RIGHT,m as UP,R as Vector2Math};
//# sourceMappingURL=index.js.map